name: Publish to NPM

on:
  push:
    tags:
      - "v*" # Run workflow on version tags, e.g. v1.0.0, v0.1.1, etc.

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"

      - name: Enable Corepack
        run: corepack enable

      - name: Enable Corepack
        run: |
          corepack enable
          corepack prepare yarn@4.6.0 --activate

      - name: Set Yarn version
        run: |
          yarn -v
          yarn config set nodeLinker node-modules

      - name: Configure Yarn cache
        uses: actions/cache@v3
        with:
          path: |
            .yarn/cache
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install

      - name: Extract version from tag
        id: extract_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Check version consistency
        run: |
          PKG_VERSION=$(node -p "require('./package.json').version")
          TAG_VERSION=${{ steps.extract_version.outputs.VERSION }}
          
          # Extract base versions (without prerelease identifiers)
          PKG_BASE_VERSION=$(echo $PKG_VERSION | cut -d'-' -f1)
          TAG_BASE_VERSION=$(echo $TAG_VERSION | cut -d'-' -f1)
          
          if [ "$PKG_BASE_VERSION" != "$TAG_BASE_VERSION" ]; then
            echo "Error: Base version in package.json ($PKG_BASE_VERSION) does not match Git tag base version ($TAG_BASE_VERSION)"
            exit 1
          else
            echo "Base versions match ($PKG_BASE_VERSION). Prerelease identifiers may differ."
          fi

      - name: Build package
        run: yarn build

      - name: Publish to NPM
        run: |
          TAG_VERSION=${{ steps.extract_version.outputs.VERSION }}
          # Update package.json version to match tag version
          if [[ "$TAG_VERSION" == *"-"* ]]; then
            # This is a prerelease version (contains hyphen)
            echo "Prerelease version detected: $TAG_VERSION"
            # Update package.json with the exact tag version
            npm version $TAG_VERSION --no-git-tag-version
            
            # Extract prerelease identifier (alpha, beta, etc.)
            # Match everything after first hyphen up to next dot or end of string
            PRERELEASE_ID=$(echo $TAG_VERSION | sed -E 's/.*-([^.]+).*/\1/')
            echo "Using NPM dist-tag: $PRERELEASE_ID"
            
            # Publish with the prerelease tag
            npm publish --tag $PRERELEASE_ID
          else
            # This is a regular release, publish as latest
            npm publish
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          token: ${{ secrets.GH_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
